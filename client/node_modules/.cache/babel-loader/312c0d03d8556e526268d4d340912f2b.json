{"ast":null,"code":"var _jsxFileName = \"/Users/charlinecuraut/Documents/VSCode/webL3/appli/client/src/messages/ListeMessages.js\";\nimport React, { Component } from \"react\";\nimport Message from './Message';\nimport NvMessage from './NvMessage';\nimport { IdContext } from \"../context/id_context\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListeMessages extends Component {\n  constructor(props) {\n    super(props);\n    this.ajoutMessage = this.ajoutMessage.bind(this);\n    this.recupereLogin = this.recupereLogin.bind(this); // this.recupereNbMess = this.recupereNbMess.bind(this);\n\n    this.recupereMessages = this.recupereMessages.bind(this); // this.delMess = this.delMess.bind(this)\n\n    this.state = {\n      profil: \"\",\n      // nb_mess : 0,\n      listeMess: []\n    };\n  }\n\n  async recupereLogin() {\n    console.log(\"appel de recupereLogin()\");\n    let t = this.context;\n    let id = t.id;\n    await axios.get(`http://localhost:4000/api/user/${id}`).then(res => {\n      this.setState({\n        profil: res.data['user']['login'],\n        // nb_mess : this.state.nb_mess,\n        listeMess: this.state.listeMess\n      });\n      console.log(\"recupereLogin() : profil=\" + this.state.profil);\n    }).catch(e => {\n      console.log(\"erreur getLogin ListeMessages\");\n    });\n  } // async recupereNbMess() {\n  //     console.log(\"appel de recupereNbMess()\")\n  //     await axios.get(\"http://localhost:4000/apimessages/infos\")\n  //         .then((res) => {\n  //             this.setState({\n  //                 profil: this.state.profil,\n  //                 nb_mess : res.data['count'],\n  //                 listeMess : this.state.listeMess\n  //             });\n  //             console.log(\"recupereNbMess() : nb_mess=\" + this.state.nb_mess);\n  //         })\n  //         .catch(e => {console.log(\"erreur getNbMess ListeMessages\")})\n  // }\n\n\n  async recupereMessages(nb) {\n    console.log(\"appel de recupereMess(nb)\");\n    await axios.get(\"http://localhost:4000/apimessages/messages\", {\n      nbAffichage: nb\n    }).then(res => {\n      this.setState({\n        profil: this.state.profil,\n        // nb_mess : this.state.nb_mess,\n        listeMess: res.data\n      });\n    });\n  }\n\n  async ajoutMessage(msg) {\n    let t = this.context;\n    let idUser = t.id;\n    await axios.post(`http://localhost:4000/apimessages/user/${idUser}/messages`, {\n      message: msg\n    }).then(res => {\n      console.log(\"j'ai rajouté le message dans le db !\"); // this.state.listeMess.unshift({\n      //     pseudo:this.state.profil,\n      //     date:new Date().toLocaleDateString(),\n      //     message:msg,\n      //     _id:res.data['id']\n      // })\n      // this.setState({\n      //     profil: this.state.profil,\n      //     nb_mess: this.state.nb_mess + 1,\n      //     listeMess: this.state.listeMess\n      // });\n      // console.log(\"on a appelé setState : nbMess=\" +this.state.nb_mess);\n    }).catch(e => {\n      console.log({\n        error: e.response.data.message\n      });\n    }); // await this.recupereMessages(10);\n  } // async ajoutMessage(msg) {\n  //     await this.ajoutMessageV2(msg)\n  //         .then(() => this.recupereMessages(10))\n  // }\n  // delMess(indexMess) {\n  //     for (var i=0; i<this.state.liste.length; i++) {\n  //         if (this.state.liste[i].idMessage === indexMess) {\n  //             this.state.liste.splice(i,1);\n  //         }\n  //     }\n  //     this.setState({\n  //         profil : this.state.profil,\n  //         nb_mess : this.state.nb_mess,\n  //         listliste_idMessagese: this.state.liste_idMessages,\n  //         listeMess: this.state.listeMess\n  //     })\n  // }\n\n\n  delMess(idMess) {\n    for (var i = 0; i < this.state.liste.length; i++) {\n      if (this.state.liste[i].idMessage === idMess) {\n        this.state.liste.splice(i, 1);\n      }\n    }\n\n    this.setState({\n      profil: this.state.profil,\n      nb_mess: this.state.nb_mess,\n      listliste_idMessagese: this.state.liste_idMessages,\n      listeMess: this.state.listeMess\n    });\n  }\n\n  render() {\n    if (this.state.profil === \"\") this.recupereLogin(); // if (this.state.nb_mess === 0) this.recupereNbMess();\n\n    if (this.state.listeMess.length === 0) this.recupereMessages(10);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [/*#__PURE__*/_jsxDEV(NvMessage, {\n        ajoutMessage: this.ajoutMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titreAndRefresh\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Liste de Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"liste_messages\",\n        children: this.state.listeMess.map((mess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Message, {\n              changePage: this.props.changePage,\n              isUtilisateur: mess.loginUser !== this.state.profil ? false : true // delMess={mess.delMess}\n              ,\n              idMessage: mess._id,\n              pseudo: mess.loginUser,\n              date: mess.date,\n              message: mess.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nListeMessages.contextType = IdContext;\nexport default ListeMessages;","map":{"version":3,"sources":["/Users/charlinecuraut/Documents/VSCode/webL3/appli/client/src/messages/ListeMessages.js"],"names":["React","Component","Message","NvMessage","IdContext","axios","ListeMessages","constructor","props","ajoutMessage","bind","recupereLogin","recupereMessages","state","profil","listeMess","console","log","t","context","id","get","then","res","setState","data","catch","e","nb","nbAffichage","msg","idUser","post","message","error","response","delMess","idMess","i","liste","length","idMessage","splice","nb_mess","listliste_idMessagese","liste_idMessages","render","map","mess","index","changePage","loginUser","_id","date","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Message from './Message'\nimport NvMessage from './NvMessage'\nimport { IdContext } from \"../context/id_context\";\nimport axios from \"axios\";\n\nclass ListeMessages extends Component{\n    constructor(props){\n        super(props)\n        this.ajoutMessage = this.ajoutMessage.bind(this);\n        this.recupereLogin = this.recupereLogin.bind(this); \n        // this.recupereNbMess = this.recupereNbMess.bind(this);\n        this.recupereMessages = this.recupereMessages.bind(this);\n        // this.delMess = this.delMess.bind(this)\n        this.state = {\n            profil : \"\",\n            // nb_mess : 0,\n            listeMess : []\n        }\n    }\n\n    async recupereLogin() {\n        console.log(\"appel de recupereLogin()\")\n        let t = this.context;\n        let id = t.id;\n        await axios.get(`http://localhost:4000/api/user/${id}`)\n        .then((res) => {\n            this.setState({\n                profil : res.data['user']['login'],\n                // nb_mess : this.state.nb_mess,\n                listeMess : this.state.listeMess\n            });\n            console.log(\"recupereLogin() : profil=\" + this.state.profil);\n        })\n        .catch(e => {console.log(\"erreur getLogin ListeMessages\")})\n    }\n\n    // async recupereNbMess() {\n    //     console.log(\"appel de recupereNbMess()\")\n    //     await axios.get(\"http://localhost:4000/apimessages/infos\")\n    //         .then((res) => {\n    //             this.setState({\n    //                 profil: this.state.profil,\n    //                 nb_mess : res.data['count'],\n    //                 listeMess : this.state.listeMess\n    //             });\n    //             console.log(\"recupereNbMess() : nb_mess=\" + this.state.nb_mess);\n    //         })\n    //         .catch(e => {console.log(\"erreur getNbMess ListeMessages\")})\n    // }\n\n    async recupereMessages(nb) {\n        console.log(\"appel de recupereMess(nb)\");\n        await axios.get(\"http://localhost:4000/apimessages/messages\", {nbAffichage : nb})\n            .then((res) => {\n                this.setState({\n                    profil : this.state.profil,\n                    // nb_mess : this.state.nb_mess,\n                    listeMess : res.data\n                })\n            })\n\n    }\n\n    async ajoutMessage(msg) {\n        let t = this.context;\n        let idUser = t.id;\n        await axios.post(`http://localhost:4000/apimessages/user/${idUser}/messages`, {message: msg})\n        .then((res) => {\n            console.log(\"j'ai rajouté le message dans le db !\");\n            // this.state.listeMess.unshift({\n            //     pseudo:this.state.profil,\n            //     date:new Date().toLocaleDateString(),\n            //     message:msg,\n            //     _id:res.data['id']\n            // })\n            // this.setState({\n            //     profil: this.state.profil,\n            //     nb_mess: this.state.nb_mess + 1,\n            //     listeMess: this.state.listeMess\n            // });\n            // console.log(\"on a appelé setState : nbMess=\" +this.state.nb_mess);\n        })\n        .catch(e => {console.log({error:e.response.data.message})})\n\n        // await this.recupereMessages(10);\n    }\n\n    // async ajoutMessage(msg) {\n    //     await this.ajoutMessageV2(msg)\n    //         .then(() => this.recupereMessages(10))\n    // }\n\n    \n    // delMess(indexMess) {\n    //     for (var i=0; i<this.state.liste.length; i++) {\n    //         if (this.state.liste[i].idMessage === indexMess) {\n    //             this.state.liste.splice(i,1);\n    //         }\n    //     }\n    //     this.setState({\n    //         profil : this.state.profil,\n    //         nb_mess : this.state.nb_mess,\n    //         listliste_idMessagese: this.state.liste_idMessages,\n    //         listeMess: this.state.listeMess\n    //     })\n    // }\n\n    delMess(idMess) {\n        for (var i=0; i<this.state.liste.length; i++) {\n            if (this.state.liste[i].idMessage === idMess) {\n                this.state.liste.splice(i,1);\n            }\n        }\n        this.setState({\n            profil : this.state.profil,\n            nb_mess : this.state.nb_mess,\n            listliste_idMessagese: this.state.liste_idMessages,\n            listeMess: this.state.listeMess\n        })\n    }\n\n\n    render() {\n        if (this.state.profil === \"\") this.recupereLogin();\n        // if (this.state.nb_mess === 0) this.recupereNbMess();\n        if (this.state.listeMess.length === 0) this.recupereMessages(10);\n\n        return(\n            <div className=\"messages\">\n                <NvMessage ajoutMessage={this.ajoutMessage} />\n                <div className=\"titreAndRefresh\">\n                    <h3>Liste de Messages</h3>\n                    {/* <i onClick={this.recupereMessages} id=\"buttonRefresh\" className=\"fa-solid fa-arrow-rotate-right\"></i> */}\n                </div>\n                <ul className=\"liste_messages\">\n                    {this.state.listeMess.map((mess, index) => (\n                        <div key={index}>\n                            <li>\n                                <Message \n                                    changePage={this.props.changePage} \n                                    isUtilisateur={(mess.loginUser!==this.state.profil)? false : true} \n                                    // delMess={mess.delMess}\n                                    idMessage={mess._id}\n                                    pseudo={mess.loginUser}\n                                    date={mess.date}\n                                    message={mess.message}\n                                />\n                            </li>\n                        </div>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\nListeMessages.contextType = IdContext;\n\nexport default ListeMessages"]},"metadata":{},"sourceType":"module"}