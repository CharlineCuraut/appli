{"ast":null,"code":"var _jsxFileName = \"/Users/charlinecuraut/Documents/VSCode/webL3/appli/client/src/utilisateur/UtilisateurMessage.js\";\nimport React, { Component } from 'react';\nimport Message from '../messages/Message';\nimport axios from 'axios';\nimport { IdContext } from '../context/id_context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UtilisateurMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.delMess = this.delMess.bind(this);\n    this.state = {\n      listeMess: []\n    };\n  }\n\n  async delMess(idMess, msg) {\n    let t = this.context;\n    let idUser = t.id;\n    await axios.delete(`http://localhost:4000/apimessages/user/${idUser}/messages/${idMess}`, {\n      data: {\n        message: msg\n      }\n    }).then(res => {\n      console.log(res.data['message']);\n      this.setState({\n        listeMess: []\n      });\n    }).catch(e => {\n      console.log({\n        error: e.response.data.message\n      });\n    });\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:4000/apimessages/messages/getNmessages/10/fromUser/${this.props.profil}`).then(res => {\n      this.setState({\n        listeMess: res.data\n      });\n    }).catch(e => {\n      console.log({\n        error: e.response.data.message\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.profil !== this.props.profil) {\n      axios.get(`http://localhost:4000/apimessages/messages/getNmessages/10/fromUser/${this.props.profil}`).then(res => {\n        this.setState({\n          listeMess: res.data\n        });\n      }).catch(e => {\n        console.log({\n          error: e.response.data.message\n        });\n      });\n    }\n  }\n\n  render() {\n    let o = this.state.listeMess.length === 0 ? \"Aucun message encore publié :(\" : \"\";\n    console.log(this.state.listeMess);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Liste de Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"liste_messages\",\n        children: [this.state.listeMess.map((mess, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            isUtilisateur: this.props.isUtilisateur,\n            delMess: this.delMess,\n            idUser: mess.idUser,\n            idMessage: mess._id,\n            pseudo: mess.loginUser,\n            date: mess.date,\n            message: mess.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)), o]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nUtilisateurMessage.contextType = IdContext;\nexport default UtilisateurMessage;","map":{"version":3,"sources":["/Users/charlinecuraut/Documents/VSCode/webL3/appli/client/src/utilisateur/UtilisateurMessage.js"],"names":["React","Component","Message","axios","IdContext","UtilisateurMessage","constructor","props","delMess","bind","state","listeMess","idMess","msg","t","context","idUser","id","delete","data","message","then","res","console","log","setState","catch","e","error","response","componentDidMount","get","profil","componentDidUpdate","prevProps","prevState","render","o","length","map","mess","index","isUtilisateur","_id","loginUser","date","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Message from '../messages/Message'\nimport axios from 'axios'\nimport {IdContext} from '../context/id_context'\n\nclass UtilisateurMessage extends Component {\n    constructor(props) {\n        super(props);\n        this.delMess = this.delMess.bind(this)\n        this.state = {\n            listeMess : []\n        }\n    }\n\n    async delMess(idMess, msg) {\n        let t = this.context;\n        let idUser = t.id;\n        await axios.delete(`http://localhost:4000/apimessages/user/${idUser}/messages/${idMess}`, {data: {message: msg}})\n        .then((res) => {\n            console.log(res.data['message']);\n            this.setState({\n                listeMess : []\n            })\n        })\n        .catch(e => {console.log({error:e.response.data.message})})\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:4000/apimessages/messages/getNmessages/10/fromUser/${this.props.profil}`)\n            .then(res => {\n                this.setState({\n                    listeMess : res.data\n                })\n            })\n            .catch(e => {console.log({error:e.response.data.message})})\n    }\n    \n\n    componentDidUpdate(prevProps, prevState){\n        if (prevProps.profil !== this.props.profil){\n            axios.get(`http://localhost:4000/apimessages/messages/getNmessages/10/fromUser/${this.props.profil}`)\n            .then(res => {\n                this.setState({\n                    listeMess : res.data\n                })\n            })\n            .catch(e => {console.log({error:e.response.data.message})})\n        }\n    }\n\n    render() {\n        let o = this.state.listeMess.length===0? \"Aucun message encore publié :(\":\"\"\n        console.log(this.state.listeMess)\n        return (\n            <div>\n                <h3>Liste de Messages</h3>\n                <ul className=\"liste_messages\">\n                    {this.state.listeMess.map((mess, index) => (\n                        <li key={index}>\n                            <Message \n                                isUtilisateur={this.props.isUtilisateur} \n                                delMess={this.delMess}\n                                idUser={mess.idUser}\n                                idMessage={mess._id}\n                                pseudo={mess.loginUser}\n                                date={mess.date}\n                                message={mess.message}\n                            />\n                        </li>\n                    ))}\n                    {o}\n                </ul>\n            </div>\n        );\n    }\n}\nUtilisateurMessage.contextType = IdContext;\n\nexport default UtilisateurMessage;"]},"metadata":{},"sourceType":"module"}